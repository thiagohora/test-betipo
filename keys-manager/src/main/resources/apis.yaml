openapi: "3.0.2"

info:
  title: API Keys Manager
  version: "1.0"
servers:
  - url: http://localhost:8080
tags:
  - name: "Services"
    description: "Services registered in the system."
  - name: "Agencies"
    description: "Agencies registered in the system"
  - name: "Keys"
    description: "Keys registered in the system"
  - name: "Requests"
    description: "Requests registered in the system"
paths:
  /services:
    get:
      tags:
        - "Services"
      responses:
        '200':
          description: Get all services
          content:
            application/json:
              schema:
                properties:
                  services:
                    type: array
                    items:
                      $ref: '#/components/schemas/Service'
      security:
        - api_key: [ ]
    post:
      tags:
        - "Services"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
      security:
        - api_key: []
  /services/{id}:
    get:
      tags:
        - "Services"
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Get service by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
      security:
        - api_key: [ ]
    put:
      tags:
        - "Services"
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        required: true
        content:
          application/json:

            schema:
              $ref: '#/components/schemas/Service'
      responses:
        '204':
          description: No content
      security:
        - api_key: []
    delete:
      tags:
        - "Services"
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          description: OK
      security:
        - api_key: []
  /real_estate_properties:
    get:
      tags:
        - "Agencies"
      responses:
        '200':
          description: Get all real state properties
          content:
            application/json:
              schema:
                properties:
                  realStateProperties:
                    type: array
                    items:
                      $ref: '#/components/schemas/RealEstateProperty'
      security:
        - api_key: [ ]
    post:
      tags:
        - "Agencies"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RealEstateProperty'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RealEstateProperty'
      security:
        - api_key: []
  /real_estate_properties/{id}:
    get:
      tags:
        - "Agencies"
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Get real state property by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RealEstateProperty'
      security:
        - api_key: [ ]
    put:
      tags:
        - "Agencies"
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RealEstateProperty'
      responses:
        '204':
          description: No content
      security:
        - api_key: []
    delete:
      tags:
        - "Agencies"
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          description: No content
      security:
        - api_key: []
  /real_estate_agencies:
    get:
      tags:
        - "Agencies"
      responses:
        '200':
          description: Get all real state agencies
          content:
            application/json:
              schema:
                properties:
                  realStateAgencies:
                    type: array
                    items:
                      $ref: '#/components/schemas/RealEstateAgency'
      security:
        - api_key: [ ]
    post:
      tags:
        - "Agencies"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RealEstateAgency'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RealEstateAgency'
      security:
        - api_key: []
  /real_estate_agencies/{id}:
    get:
      tags:
        - "Agencies"
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Get real state agency by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RealEstateAgency'
      security:
        - api_key: [ ]
    put:
      tags:
        - "Agencies"
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RealEstateAgency'
      responses:
        '204':
          description: No content
      security:
        - api_key: []
    delete:
      tags:
        - "Agencies"
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          description: OK
      security:
        - api_key: []
  /key_manager_agencies:
    get:
      tags:
        - "KeyManager"
      responses:
        '200':
          description: Get all key manager agencies
          content:
            application/json:
              schema:
                properties:
                  keyManagerAgencies:
                    type: array
                    items:
                      $ref: '#/components/schemas/KeyManagerAgency'
      security:
        - api_key: [ ]
    post:
      tags:
        - "KeyManager"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyManagerAgency'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyManagerAgency'
      security:
        - api_key: []
  /key_manager_agencies/{id}:
    get:
      tags:
        - "KeyManager"
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Get key manager agency by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyManagerAgency'
      security:
        - api_key: [ ]
    put:
      tags:
        - "KeyManager"
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyManagerAgency'
      responses:
        '204':
          description: No content
      security:
        - api_key: []
    delete:
      tags:
        - "KeyManager"
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          description: No content
      security:
        - api_key: []
  /property_key_sets:
    get:
      tags:
        - "Keys"
      responses:
        '200':
          description: Get all property key sets
          content:
            application/json:
              schema:
                properties:
                  propertyKeySets:
                    type: array
                    items:
                      $ref: '#/components/schemas/PropertyKeySet'
      security:
        - api_key: [ ]
    post:
      tags:
        - "Keys"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyKeySet'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyKeySet'
      security:
        - api_key: []
  /property_key_sets/{id}:
    get:
      tags:
        - "Keys"
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Get property key set by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyKeySet'
      security:
        - api_key: [ ]
    put:
      tags:
        - "Keys"
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyKeySet'
      responses:
        '204':
          description: No content
      security:
        - api_key: []
    delete:
      tags:
        - "Keys"
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          description: No content
      security:
        - api_key: []
  /property_keys:
    get:
      tags:
        - "Keys"
      responses:
        '200':
          description: Get all property keys
          content:
            application/json:
              schema:
                properties:
                  propertyKeys:
                    type: array
                    items:
                      $ref: '#/components/schemas/PropertyKey'
      security:
        - api_key: [ ]
    post:
      tags:
        - "Keys"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyKey'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyKey'
      security:
        - api_key: []
  /property_keys/{id}:
    get:
      tags:
        - "Keys"
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Get property key by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyKey'
      security:
        - api_key: [ ]
    put:
      tags:
        - "Keys"
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyKey'
      responses:
        '204':
          description: No content
      security:
        - api_key: []
    delete:
      tags:
        - "Keys"
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          description: No content
      security:
        - api_key: []
  /system_requests:
    get:
      tags:
        - "Requests"
      responses:
        '200':
          description: Get all system requests
          content:
            application/json:
              schema:
                properties:
                  systemRequests:
                    type: array
                    items:
                      $ref: '#/components/schemas/SystemRequest'
      security:
        - api_key: [ ]
    post:
      tags:
        - "Requests"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemRequest'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemRequest'
      security:
        - api_key: []
  /system_requests/{id}:
    get:
      tags:
        - "Requests"
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Get system request by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemRequest'
      security:
        - api_key: [ ]
    patch:
      tags:
        - "Requests"
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemRequest'
      responses:
        '204':
          description: No content
      security:
        - api_key: []
    delete:
      tags:
        - "Requests"
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          description: No contentS
      security:
        - api_key: []
components:
  parameters:
    id:
      name: id
      in: path
      required: true
      schema:
        type: integer
        format: int64
  securitySchemes:
    api_key:
      type: "apiKey"
      description: "The API Key representing a particular Betipo costumer."
      name: "api-key"
      in: "header"
  schemas:
    RealEstateAgency:
      type: object
      required:
        - name
        - nif
        - reference
        - address
        - status
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        reference:
          $ref: '#/components/schemas/RegistryReference'
        nif:
          $ref: '#/components/schemas/Nif'
        status:
          $ref: '#/components/schemas/EntityStatus'
        address:
          $ref: '#/components/schemas/Address'
    KeyManagerAgency:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        nif:
          $ref: '#/components/schemas/Nif'
        status:
          $ref: '#/components/schemas/EntityStatus'
        address:
          $ref: '#/components/schemas/Address'
    Service:
      type: object
      required:
        - name
        - nif
        - type
        - address
        - status
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        nif:
          type: string
          pattern: ^[0-9]{8}[A-Z]$
          description: NIF of the service
        status:
          $ref: '#/components/schemas/EntityStatus'
        type:
          type: string
        address:
          $ref: '#/components/schemas/Address'
    RealEstatePropertyType:
      type: string
      enum:
        - BUILDING
        - HOUSE
        - GARAGE
        - APARTMENT
        - COMMERCIAL
        - INDUSTRIAL
        - STORAGE_ROOM
        - LAND
        - OTHER
    RealEstateProperty:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        reference:
          $ref: '#/components/schemas/RegistryReference'
        status:
          $ref: '#/components/schemas/EntityStatus'
        address:
          $ref: '#/components/schemas/Address'
        buildingReference:
          type: string
        type:
          $ref: '#/components/schemas/RealEstatePropertyType'
        owner:
          $ref: '#/components/schemas/TypeId'
    Coordinates:
      type: object
      required:
        - latitude
        - longitude
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
    Address:
      type: object
      required:
        - street
        - number
        - postalCode
        - city
      properties:
        street:
          type: string
        number:
          type: string
        floor:
          type: string
        door:
          type: string
        postalCode:
          type: string
        city:
          type: string
        province:
          type: string
        country:
          type: string
        coordinates:
          $ref: '#/components/schemas/Coordinates'
    RegistryReference:
      type: string
      pattern: ^[0-9]{2}[0-9]{3}[A-Z][0-9]{3}[0-9]{5}[0-9]{4}[A-Z]{2}$
      description: Registry reference of the property
    EntityStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
        - DELETED
    Nif:
      type: string
      pattern: ^[0-9]{8}[A-Z]$
      description: NIF of the company
    TypeId:
      type: object
      required:
        - id
        - name
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          type: string
    Id:
      type: integer
      format: int64
    PropertyKeySet:
      type: object
      required:
        - type
        - reference
        - holder
        - propertyId
        - status
        - owner
        - original
        - keys
      properties:
        id:
          $ref: '#/components/schemas/Id'
        type:
          $ref: '#/components/schemas/PropertyKeyType'
        reference:
          type: string
          maxLength: 30
        holder:
          $ref: '#/components/schemas/TypeId'
        propertyId:
          $ref: '#/components/schemas/Id'
        status:
          $ref: '#/components/schemas/EntityStatus'
        owner:
          $ref: '#/components/schemas/TypeId'
        original:
          type: boolean
        keys:
          type: array
          items:
            $ref: '#/components/schemas/Id'
    PropertyKey:
      type: object
      required:
        - reference
        - holder
        - keySetId
        - status
        - owner
        - original
      properties:
        id:
          $ref: '#/components/schemas/Id'
        reference:
          type: string
          maxLength: 30
        holder:
          $ref: '#/components/schemas/TypeId'
        keySetId:
          $ref: '#/components/schemas/Id'
        status:
          $ref: '#/components/schemas/EntityStatus'
        owner:
          $ref: '#/components/schemas/TypeId'
        original:
          type: boolean
    PropertyKeyType:
      type: string
      enum:
        - FRONT_DOOR
        - MAIN_DOOR
        - GARAGE
        - STORAGE_ROOM
        - MAILBOX
        - BUILDING_DOOR
        - BUILDING_GARAGE
        - BUILDING_STORAGE_ROOM
        - BUILDING_TERRACE
        - BACK_DOOR
        - OTHER
    SystemRequest:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        type:
          $ref: '#/components/schemas/SystemRequestType'
        requestType:
          type: string
          enum:
            - RESERVATION
            - COPY
        reference:
          type: string
          maxLength: 30
        requester:
          $ref: '#/components/schemas/TypeId'
        requestStatus:
          $ref: '#/components/schemas/SystemRequestStatus'
      discriminator:
        propertyName: requestType
        mapping:
          RESERVATION: '#/components/schemas/SystemRequestKeyReservation'
          COPY: '#/components/schemas/SystemRequestKeyCopy'
    SystemRequestKeyReservation:
      allOf:
        - $ref: '#/components/schemas/SystemRequest'
        - type: object
          required:
            - newHolder
            - deliveryAddress
            - reservationDate
          properties:
            newHolder:
              $ref: '#/components/schemas/TypeId'
            oldHolder:
              $ref: '#/components/schemas/TypeId'
            keySetIds:
              type: array
              items:
                $ref: '#/components/schemas/Id'
            keyIds:
              type: array
              items:
                $ref: '#/components/schemas/Id'
            trackingStatus:
              $ref: '#/components/schemas/SystemRequestTrackingStatus'
            deliveryMode:
              $ref: '#/components/schemas/SystemRequestDeliveryMode'
            deliveryAddress:
              $ref: '#/components/schemas/Address'
            reservationDate:
              type: string
              format: date-time
    SystemRequestKeyCopy:
      allOf:
        - $ref: '#/components/schemas/SystemRequest'
        - type: object
          required:
            - requestDate
          properties:
            requestDate:
              type: string
              format: date-time
            keySetId:
              type: array
              items:
                $ref: '#/components/schemas/Id'
            keyId:
              type: array
              items:
                $ref: '#/components/schemas/Id'
    SystemRequestDeliveryMode:
      type: string
      enum:
        - PICKUP
        - COURIER_DELIVERY
    SystemRequestTrackingStatus:
      type: string
      enum:
        - PENDING_PICKUP
        - PICKED_UP
        - DELIVERED
        - CANCELLED
    SystemRequestStatus:
      type: string
      enum:
        - PENDING
        - ACCEPTED
        - REJECTED
        - CANCELLED
        - COMPLETED
    SystemRequestType:
      type: string
      enum:
        - CREATE_NEW_KEY_SET
        - COPY_KEY_SET
        - COPY_KEY
        - RESERVE_KEYS
